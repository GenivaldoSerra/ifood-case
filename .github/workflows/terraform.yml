name: "NYC Trip Record S3 Deploy"

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      aws-assume-role-arn:
        type: string
        required: true
      aws-region:
        type: string
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Test inputs
        run: |
          echo environment: ${{ inputs.environment }}
          echo aws-region: ${{ inputs.aws-region }}
          echo aws-assume-role-arn: ${{ inputs.aws-assume-role-arn }}

      - name: Checkout
        uses: actions/checkout@v4
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws-assume-role-arn }}
          role-session-name: NycTripRecordOidcRole
          aws-region: ${{ inputs.aws-region }}

      - name: Read destroy configuration
        id: read-destroy-config
        run: |
          DESTROY="$(jq -r '.${{ inputs.environment }}' ./devops/terraform/destroy_config.json)"
          echo "destroy=$(echo $DESTROY)" >> $GITHUB_OUTPUT

      - name: Terraform Init
        run: cd devops/terraform && terraform init

      - name: Terraform Validate
        run: | 
          cd devops/terraform && terraform validate

      - name: Terraform Destroy
        if: steps.read-destroy-config.outputs.destroy == 'true'
        run: |
          cd devops/terraform
          terraform workspace select ${{ inputs.environment }} || terraform workspace new ${{ inputs.environment }}
          terraform destroy \
            -var-file="./envs/${{ inputs.environment }}/terraform.tfvars" \
            -auto-approve

      - name: Terraform Plan
        if: steps.read-destroy-config.outputs.destroy != 'true'
        id: terraform-plan
        run: |
          cd devops/terraform
          terraform workspace select ${{ inputs.environment }} || terraform workspace new ${{ inputs.environment }}
          terraform plan \
          -var-file="./envs/${{ inputs.environment }}/terraform.tfvars" \
          -out="${{ inputs.environment }}.plan"
      
      - name: Terraform Apply
        if: steps.read-destroy-config.outputs.destroy != 'true'
        id: terraform-apply
        run: | 
          cd devops/terraform
          terraform workspace select ${{ inputs.environment }} || terraform workspace new ${{ inputs.environment }}
          terraform apply "${{ inputs.environment }}.plan"
