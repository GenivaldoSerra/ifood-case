name: "Databricks Setup (Secrets + Jobs)"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment do deploy'
        required: true
        type: choice
        options:
          - dev
          - prod
        default: 'dev'

permissions:
  id-token: write
  contents: read

jobs:
  databricks-setup:
    runs-on: ubuntu-latest
    steps:
      - name: Create Databricks secrets
        env:
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "Criando scope no Databricks (se n√£o existir)..."
          curl -s -X POST "$DATABRICKS_HOST/api/2.0/secrets/scopes/create" \
            -H "Authorization: Bearer $DATABRICKS_TOKEN" \
            -d '{"scope": "nyc-trip-record"}' || echo "Scope may already exist"

          echo "Criando secret aws-access-key..."
          curl -s -X POST "$DATABRICKS_HOST/api/2.0/secrets/put" \
            -H "Authorization: Bearer $DATABRICKS_TOKEN" \
            -d "{\"scope\": \"nyc-trip-record\", \"key\": \"aws-access-key\", \"string_value\": \"$AWS_ACCESS_KEY\"}"

          echo "Criando secret aws-secret-key..."
          curl -s -X POST "$DATABRICKS_HOST/api/2.0/secrets/put" \
            -H "Authorization: Bearer $DATABRICKS_TOKEN" \
            -d "{\"scope\": \"nyc-trip-record\", \"key\": \"aws-secret-key\", \"string_value\": \"$AWS_SECRET_KEY\"}"
